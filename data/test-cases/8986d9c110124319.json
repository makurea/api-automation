{"uid":"8986d9c110124319","name":"Невалидные данные: должна вернуться ошибка 400 Bad Request Невалидный кейс #2: email = \"batman@gotham.com\", password = \"\"","fullName":"com.makurea.tests.RegisterTest.registration_withInvalidData_ShouldReturn400Error","historyId":"efa372a40d574192d4abd8ab114c0f3b","time":{"start":1760463491616,"stop":1760463492000,"duration":384},"description":"","status":"failed","statusMessage":"[Проверка содержания ошибки] \nExpecting actual:\n  \"Missing password\"\nto contain:\n  \"Note: Only defined users succeed registration\" ","statusTrace":"java.lang.AssertionError: [Проверка содержания ошибки] \nExpecting actual:\n  \"Missing password\"\nto contain:\n  \"Note: Only defined users succeed registration\" \n\tat com.makurea.tests.RegisterTest.registration_withInvalidData_ShouldReturn400Error(RegisterTest.java:136)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setUp","time":{"start":1760463488284,"stop":1760463488286,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.makurea.tests.RegisterTest]/[test-template:registration_withInvalidData_ShouldReturn400Error(java.lang.String, java.lang.String)]/[test-template-invocation:#2]"},{"name":"story","value":"Registration"},{"name":"epic","value":"API Testing"},{"name":"feature","value":"User Management"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2578@runnervmwhb2z.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.makurea.tests.RegisterTest"},{"name":"testClass","value":"com.makurea.tests.RegisterTest"},{"name":"testMethod","value":"registration_withInvalidData_ShouldReturn400Error"},{"name":"suite","value":"Проверка эндпоинта POST /api/register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"batman@gotham.com"},{"name":"arg1","value":""}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8986d9c110124319.json","parameterValues":["batman@gotham.com",""]}